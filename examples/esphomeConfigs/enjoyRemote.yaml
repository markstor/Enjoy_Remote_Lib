esphome:
  name: shadowslord
  friendly_name: ShadowsLord
  libraries:
    - Preferences
    - SPI
    - SmartRC-CC1101-Driver-Lib@2.5.6
    - EnjoyRemoteLib@^2.1.2
  includes:
    - remotesSecrets.h
    - esphomeEnjoyComponents.h

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  
# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key

ota:
  password: !secret ota_password


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: !secret fallback_ssid
    password: !secret fallback_password

captive_portal:

cover:
  - platform: custom
    lambda: |-
      auto enjoy_remote = new EnjoyESPRemote(ENJOY_REMOTE_ADDRESS);
      enjoy_remote->add_cover(0);
      enjoy_remote->add_cover(1);
      enjoy_remote->add_cover(2);
      enjoy_remote->add_cover(3);
      App.register_component(enjoy_remote);
      return enjoy_remote->covers;

    covers:
      - id: "enjoy"
        name: "Enjoy Blind"
      - id: "enjoy2"
        name: "Enjoy Blind2"
      - id: "enjoy3"
        name: "Enjoy Blind3"
      - id: "enjoy4"
        name: "Enjoy Blind4"

switch:
  - platform: template
    name: "PROG"
    turn_on_action:
      - lambda: |-
          ((EnjoyESPCover*)id(enjoy))->program();

number:
  - platform: template
    min_value: 0
    step: 1
    max_value: 255
    id: "counter"
    name: "Remote Counter"
    lambda: |-
        return ((EnjoyESPCover*)id(enjoy))->remote->enjoyRemote.getCurrentCode();
    set_action:
      then:
        lambda: |-
          ((EnjoyESPCover*)id(enjoy))->remote->enjoyRemote.setCode(x);